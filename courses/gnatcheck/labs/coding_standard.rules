-------------------------------
-- 11.1 STYLE-RELATED RULES  --
-------------------------------

--  11.1.2 OBJECT ORIENTATION
--  -------------------------

+R Deep_Inheritance_Hierarchies : 5
--  Flag tagged derived type declaration or an interface type declaration
--  if its depth (in its inheritance hierarchy) exceeds 5

--  11.1.4 PROGRAM STRUCTURE
--  ------------------------

+R Deeply_Nested_Generics : 3
--  Flag a generic declaration nested in another generic declaration if the
--  nesting level of the inner generic exceeds 3

--  11.1.5 PROGRAMMING PRACTICE
--  ---------------------------

+R Anonymous_Arrays
--  Flag all anonymous array type definitions

+R Non_Short_Circuit_Operators
--  Flag all calls to predefined and and or operators for any boolean type.

+R OTHERS_In_Aggregates
--  Flag each use of an others choice in extension aggregates. In record and
--  array aggregates, an others choice is flagged unless it is used to refer
--  to all components, or to all but one component.

+R OTHERS_In_CASE_Statements
--  Flag any use of an others choice in a case statement.

+R OTHERS_In_Exception_Handlers
--  Flag any use of an others choice in an exception handler.

--  11.1.6 READABILITY
--  ------------------

+R Identifier_Casing : Others=mixed
--  Flag any defining identifier if it casing does not follow the rules: the
--  first letter and every letter after underscore are uppercase, all the
--  other lettres are lowercase

+R Identifier_Prefixes : Type = T_,
                         Access = A_,
                         constant = C_
--  Flag any defining identifier if it corresponds to the given kind of
--  entities but does not have a specified prefix

+R Identifier_Suffixes : Type_Suffix         = _Type
+R Identifier_Suffixes : Access_Suffix       = _Access_Type
+R Identifier_Suffixes : Class_Access_Suffix = _Class_Type
--  Flag any defining identifier if it corresponds to the given kind of
--  entities but does not have a specified suffix

--------------------------------
--  11.2 FEATURE USAGE RULES  --
--------------------------------

+R Abstract_Type_Declarations
--  Flag all declarations of abstract types, including generic formal types.

+R Anonymous_Subtypes
--  Flag all uses of anonymous subtypes (with exceptions - see RM)

+R Blocks
---  Flag each block statement.

+R Complex_Inlined_Subprograms : 3
--  Flag subprogram (or generic subprogram, or instantiation of a
--  subprogram) if pragma Inline is applied and at least one of
--  conditions specified in RM are met

+R Controlled_Type_Declarations
--  Flag all declarations of controlled types

+R Non_Qualified_Aggregates
--  Flag each non-qualified aggregate. A non-qualified aggregate is
--  an aggregate that is not the expression of a qualified expression

----------------------------
--  11.4 SPARK ADA RULES  --
----------------------------

+R Boolean_Relational_Operators
--  Flag call to relational operator (‘<’, ‘>’, etc) for predefined Boolean

-------------------------------------------------------------------
--  7 Adding the Results of Compiler Checks to gnatcheck Output  --
-------------------------------------------------------------------

+R Warnings:km
--  Include warnings generated by the compiler with '-gnatwk' (variables that
--  could be constants) and '-gnatwm' (modified but unreferenced variables)
--  into generated gnatcheck report

+R Style_Checks: u
+R Style_Checks: O
+R Style_Checks: e
--  Include warnings generated by style checks into generated gnatcheck report
--    '-gnatyu' (unnecessary blank lines)
--    '-gnatyO' (overriding subprograms not explicitly marked)
--    '-gnatye' (check end/exit labels)

+R Restrictions: No_Allocators,
                 No_Tasking
+R Restrictions : No_Dependence => Ada.Containers
--  Include warnings generated by the compiler with the specified restrictions
--  into generated gnatcheck report
