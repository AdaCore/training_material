====================
:rust:`if` expressions
====================

--------------------
:rust:`if` expressions
--------------------

You use
`if expressions <https://doc.rust-lang.org/reference/expressions/if-expr.html#if-expressions>`__
exactly like :rust:`if` statements in other languages:

.. code:: rust

   fn main() {
       let x = 10;
       if x == 0 {
           println!("zero!");
       } else if x < 100 {
           println!("biggish");
       } else {
           println!("huge");
       }
   }

In addition, you can use :rust:`if` as an expression. The last expression of
each block becomes the value of the :rust:`if` expression:

.. code:: rust

   fn main() {
       let x = 10;
       let size = if x < 20 { "small" } else { "large" };
       println!("number size: {}", size);
   }

.. raw:: html

---------
Details
---------

Because :rust:`if` is an expression and must have a particular type, both of
its branch blocks must have the same type. Show what happens if you add
:rust:`;` after :rust:`"small"` in the second example.

An :rust:`if` expression should be used in the same way as the other
expressions. For example, when it is used in a :rust:`let` statement, the
statement must be terminated with a :rust:`;` as well. Remove the :rust:`;`
before :rust:`println!` to see the compiler error.

.. raw:: html

