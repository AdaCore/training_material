with System;
package Io is

  type File_T is limited private;

  function Read_From_Stdin return String;
  procedure Write_To_Stdout (Str : String);

  function Create_File
   (Filename : String)
    return File_T;
  procedure Write_To_File
   (File : File_T;
    Str  : String);
  procedure Close_File (File : File_T);

private
  type File_T is access all Integer;

end Io;
with Interfaces.C;
with Interfaces.C.Strings;
with Ada.Text_IO;
package body Io is

  function C_Gets return Interfaces.C.Strings.chars_ptr with
    Import,
    Convention    => C,
    External_Name => "gets";
  function Read_From_Stdin return String is
   (Interfaces.C.Strings.Value (C_Gets));

  procedure C_Puts (Str : Interfaces.C.char_array) with
    Import,
    Convention    => C,
    External_Name => "puts";
  procedure Write_To_Stdout (Str : String) is
  begin
    C_Puts (Interfaces.C.To_C (Str & ASCII.LF));
  end Write_To_Stdout;

  function C_Fopen
   (Filename : Interfaces.C.char_array;
    Mode     : Interfaces.C.char_array)
    return File_T with
    Import,
    Convention    => C,
    External_Name => "fopen";
  function Create_File
   (Filename : String)
    return File_T is
   (C_Fopen (Interfaces.C.To_C (Filename), Interfaces.C.To_C ("w")));

  procedure C_Fputs
   (Str  : Interfaces.C.char_array;
    File : File_T) with
    Import,
    Convention    => C,
    External_Name => "fputs";
  procedure Write_To_File
   (File : File_T;
    Str  : String) is
  begin
    C_Fputs (Interfaces.C.To_C (Str), File);
  end Write_To_File;

  procedure C_Fclose (File : File_T) with
    Import,
    Convention    => C,
    External_Name => "fclose";
  procedure Close_File (File : File_T) is
  begin
    C_Fclose (File);
  end Close_File;

end Io;
with Ada.Exceptions;
with Io; use Io;
procedure Main is

  function Get
   (Prompt : String)
    return String is
  begin
    Io.Write_To_Stdout (Prompt & ">");
    return Io.Read_From_Stdin;
  end Get;

begin

  declare
    Filename : constant String := Get ("Filename");
    File_Ptr : Io.File_T       := Io.Create_File (Filename);
  begin
    loop
      declare
        Str : constant String := Get ("Line");
      begin
        exit when Str'Length = 0;
        Io.Write_To_File (File_Ptr, Str);
      end;
    end loop;
    Io.Close_File (File_Ptr);
  end;

end Main;
