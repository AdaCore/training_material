-------------------
Flow Analysis Lab
-------------------

- Find the :filename:`050_flow_analysis` sub-directory in :filename:`source`

   + You can copy it locally, or work with it in-place

- In that directory, open the project :filename:`lab.gpr` in :toolname:`GNAT Studio`

   + Or, on the command-line, do :command:`gnatstudio -P lab.gpr`

- Unfold the source code directory (.) in the project pane

-----------------------------
Aliasing and Initialization
-----------------------------

- Find and open the files :filename:`basics.ads` and :filename:`basics.adb` in :toolname:`GNAT Studio`
- Study the code and see if you can predict what's wrong.

   + These examples illustrate the basic forms of flow analysis in SPARK.

- Use :menu:`SPARK` |rightarrow| :menu:`Examine File...` to analyse the body of package `Basics`.
- Click on the "Locations" tab to see the messages organised by unit.
- Make sure you understand the check messages that :toolname:`GNATprove` produces.

  + Discuss these with the course instructor.

- Either change the code or justify the message with pragma :ada:`Annotate`.

  + The objective is to get no messages when running :toolname:`GNATprove`.

-------------------
Data Dependencies
-------------------

- Run flow analysis. Right-click in the code to display the contextual menu.
  Display the data dependencies generated by :toolname:`GNATprove` with the
  contextual menu :menu:`SPARK` |rightarrow| :menu:`Globals` |rightarrow|
  :menu:`Show generated Global contracts`.

  + Study the generated contracts and make sure you understand them.

- Add a null data dependencies contracts with aspect :ada:`Global => null` to
  all subprograms.

- Run flow analysis. Make sure you understand the check messages that
  :toolname:`GNATprove` produces.

- Add correct data dependencies contracts with aspect :ada:`Global` to all
  subprograms.

  + The objective is to get no messages when running :toolname:`GNATprove`.

- Rerun :toolname:`GNATprove` with checkbox :menu:`Report check proved` selected.

  + Review the info messages and make sure you understand them.

- Modify the code or contracts and check that :toolname:`GNATprove` detects
  mismatches between them. Make sure you understand the check messages that
  :toolname:`GNATprove` produces.
