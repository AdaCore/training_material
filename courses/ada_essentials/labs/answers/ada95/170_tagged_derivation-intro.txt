-- Employee.ads (Specification)
package Employee is
   subtype Name_T is String (1 .. 6);

   type Date_T is record
      Year  : Positive;
      Month : Positive;
      Day   : Positive;
   end record;

   type Job_T is (Sales, Engineer, Bookkeeping);

   ------------
   -- Person --
   ------------
   type Person_T is tagged record
      The_Name       : Name_T;
      The_Birth_Date : Date_T;
   end record;

   procedure Set_Name (O     : in out Person_T;
                       Value :        Name_T);
   function Name (O : Person_T) return Name_T;

   procedure Set_Birth_Date (O     : in out Person_T;
                             Value :        Date_T);
   function Birth_Date (O : Person_T) return Date_T;

   procedure Print (O : Person_T);

   --------------
   -- Employee --
   --------------
   type Employee_T is new Person_T with record
      The_Employee_Id : Positive;
      The_Start_Date  : Date_T;
   end record;

   procedure Set_Start_Date (O     : in out Employee_T;
                             Value :        Date_T);
   function Start_Date (O : Employee_T) return Date_T;

   procedure Print (O : Employee_T);

   --------------
   -- Position --
   --------------
   type Position_T is new Employee_T with record
      The_Job : Job_T;
   end record;

   procedure Set_Job (O     : in out Position_T;
                      Value :        Job_T);
   function Job (O : Position_T) return Job_T;

   procedure Print (O : Position_T);

end Employee;

--------------------------------------------------------------------------------

-- Employee.adb (Body)
with Ada.Text_IO; use Ada.Text_IO;

package body Employee is

   function Image (Date : Date_T) return String is
      Temp_String : String := Date.Year'Image & " -" & Date.Month'Image & " -" & Date.Day'Image;
   begin
      return Temp_String;
   end Image;

   procedure Set_Name (O     : in out Person_T;
                       Value :        Name_T) is
   begin
      O.The_Name := Value;
   end Set_Name;

   function Name (O : Person_T) return Name_T is
   begin
      return O.The_Name;
   end Name;

   procedure Set_Birth_Date (O     : in out Person_T;
                             Value :        Date_T) is
   begin
      O.The_Birth_Date := Value;
   end Set_Birth_Date;

   function Birth_Date (O : Person_T) return Date_T is
   begin
      return O.The_Birth_Date;
   end Birth_Date;

   procedure Print (O : Person_T) is
   begin
      Put_Line ("Name: " & O.Name);
      Put_Line ("Birthdate: " & Image (O.Birth_Date));
   end Print;

   procedure Set_Start_Date
     (O     : in out Employee_T;
      Value :        Date_T) is
   begin
      O.The_Start_Date := Value;
   end Set_Start_Date;

   function Start_Date (O : Employee_T) return Date_T is
   begin
      return O.The_Start_Date;
   end Start_Date;

   procedure Print (O : Employee_T) is
   begin
      Put_Line ("Name: " & Name (O));
      Put_Line ("Birthdate: " & Image (O.Birth_Date));
      Put_Line ("Startdate: " & Image (O.Start_Date));
   end Print;

   procedure Set_Job (O     : in out Position_T;
                      Value :        Job_T) is
   begin
      O.The_Job := Value;
   end Set_Job;

   function Job (O : Position_T) return Job_T is
   begin
      return O.The_Job;
   end Job;

   procedure Print (O : Position_T) is
   begin
      Put_Line ("Name: " & O.Name);
      Put_Line ("Birthdate: " & Image (O.Birth_Date));
      Put_Line ("Startdate: " & Image (O.Start_Date));
      Put_Line ("Job: " & O.Job'Image);
   end Print;

end Employee;

--------------------------------------------------------------------------------

-- main.adb
with Ada.Text_IO; use Ada.Text_IO;
with Employee;

procedure Main is
   Applicant : Employee.Person_T;
   Employ    : Employee.Employee_T;
   Staff     : Employee.Position_T;

   Birth_Date_1 : Employee.Date_T := (Year  => 1_234, Month => 12, Day   => 1);
   Birth_Date_2 : Employee.Date_T := (Year  => 2_345, Month => 11, Day   => 2);
   Start_Date_2 : Employee.Date_T := (Year  => 3_456, Month => 10, Day   => 3);
   Birth_Date_3 : Employee.Date_T := (Year  => 4_567, Month => 9,  Day   => 4);
   Start_Date_3 : Employee.Date_T := (Year  => 5_678, Month => 8,  Day   => 5);

begin
   Applicant.Set_Name ("Wilma ");
   Applicant.Set_Birth_Date (Birth_Date_1);

   Employ.Set_Name ("Betty ");
   Employ.Set_Birth_Date (Birth_Date_2);
   Employ.Set_Start_Date (Start_Date_2);

   Staff.Set_Name ("Bambam");
   Staff.Set_Birth_Date (Birth_Date_3);
   Staff.Set_Start_Date (Start_Date_3);
   Staff.Set_Job (Employee.Engineer);

   Put_Line ("--- Applicant Details ---");
   Applicant.Print;
   New_Line;

   Put_Line ("--- Employee Details ---");
   Employ.Print;
   New_Line;

   Put_Line ("--- Staff Position Details ---");
   Staff.Print;
   New_Line;

end Main;