name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Slides:
    runs-on: ubuntu-latest
    container: public.ecr.aws/w0s6m4g9/pandoc-beamer:latest

    strategy:
        fail-fast: false
        matrix:
            source: [fundamentals_of_ada,
                     fundamentals_of_ada/standard_course.txt,
                     fundamentals_of_ada/advanced.txt,
                     fundamentals_of_ada/libs_containers_strings_and_dynamic_memory.txt,
                     fundamentals_of_ada/opat.txt,
                     fundamentals_of_ada/labs,
                     spark_for_ada_programmers,
                     spark_for_ada_programmers/course.txt,
                     advanced_exception_analysis,
                     gnatcheck,
                     gnat_studio,
                     gnat_project_facility,
                     gnattest,
                     codepeer,
                     gnatcoverage,
                     static_analysis_via_compiler]

    steps:
      - uses: actions/checkout@v3

      - name: Check source is updated with prelude
        run: python3 contrib/ci/fix_prelude.py

      - name: Prepare slides environment
        run: python3 contrib/ci/slides.py ${{ format('{0}/{1}', 'courses', matrix.source) }} printenv >> $GITHUB_ENV


      - name: ${{ env.PRETTY_NAME }} - Build
        run: python3 pandoc/pandoc_fe.py --output-dir ${{ env.OUTPUT_DIR }} --hush --extension pdf --source ${{ env.SOURCES }}

      - name: ${{ env.PRETTY_NAME }} - Package and upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRETTY_NAME }}
          path: ${{ env.ARTIFACTS }}
          if-no-files-found: error

  Labs-Slides:
    runs-on: ubuntu-latest
    container: sawertyu/pandoc_beamer:latest

    steps:
      - uses: actions/checkout@v3

      - name: Radar - Package
        run: python3 contrib/ci/package_labs.py courses/fundamentals_of_ada/labs/radar && unzip out/radar/radar.zip -d out/radar/pkg

      - name: Radar - Upload
        uses: actions/upload-artifact@v3
        with:
          name: Radar labs
          path: out/radar/pkg/*

      - name: Solar System - Package
        run: python3 contrib/ci/package_labs.py courses/fundamentals_of_ada/labs/solar_system && unzip out/solar_system/solar_system.zip -d out/solar_system/pkg

      - name: Solar System - Upload
        uses: actions/upload-artifact@v3
        with:
          name: Solar System labs
          path: out/solar_system/pkg/*

      - name: CodePeer - Package
        run: python3 contrib/ci/package_labs.py courses/codepeer/labs/ && mv out/labs out/codepeer_labs && unzip out/codepeer_labs/labs.zip -d out/codepeer_labs/pkg

      - name: CodePeer - Upload
        uses: actions/upload-artifact@v3
        with:
          name: CodePeer labs
          path: out/codepeer_labs/pkg/*

      - name: GNAT Project Facility - Package
        run: python3 contrib/ci/package_labs.py courses/gnat_project_facility/labs/ && mv out/labs out/gnat_project_facility_labs && unzip out/gnat_project_facility_labs/labs.zip -d out/gnat_project_facility_labs/pkg

      - name: GNAT Project Facility - Upload
        uses: actions/upload-artifact@v3
        with:
          name: GNAT Project Facility labs
          path: out/gnat_project_facility_labs/pkg/*

      - name: Mini Cinema - Package
        run: python3 contrib/ci/package_labs.py courses/fundamentals_of_ada/mini_projects/cinema && unzip out/cinema/cinema.zip -d out/cinema/pkg

      - name: Mini Cinema - Upload
        uses: actions/upload-artifact@v2
        with:
          name: Mini Project - Mini Cinema
          path: out/cinema/pkg/*

  labs-build:

    name: Labs # intentionly short
    strategy:
      matrix:
        os: [ubuntu-latest] #windows-latest TODO

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: actions/cache@v3
        with:
          path: ./cached_gnat
          key: ${{ runner.os }}-gnat-ce-2020

      - name: Get GNAT Community 2020 toolchain
        uses: ada-actions/toolchain@ce2020
        with:
          distrib: community
          install_dir: ./cached_gnat

      - name: Update base system
        run: |
          sudo apt-get update
          sudo apt-get install libsdl2-dev libglu1-mesa-dev freeglut3-dev libsdl2-ttf-dev

      - name: Solution build for Ada Fundamentals
        env:
            GNAT_SDL: extern/gnat_sdl
            GAME_SUPPORT: extern/game_support
        run: |
            source contrib/ci/lab_env.sh
            python3 contrib/ci/build_labs_check.py courses/fundamentals_of_ada/labs

  python-black:
    name: Python scripts black lint check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4

      - name: Install black
        run: python3 -m pip install black

      - name: Run black on contrib/
        run: python3 -m black --check $(find contrib -name '*.py')

      - name: Run black on pandoc/
        run: python3 -m black --check $(find pandoc -name '*.py')

  pytest:
    name: Contrib scripts check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: actions/cache@v3
        with:
          path: ./cached_gnat
          key: ${{ runner.os }}-gnat-ce-2020

      - name: Get GNAT Community 2020 toolchain
        uses: ada-actions/toolchain@ce2020
        with:
          distrib: community
          install_dir: ./cached_gnat

      - name: Setup Python
        run: python3 -m pip install pytest git+https://gitlab.com/leogermond/epycs.git

      - name: Run PyTest
        run: pytest --ignore=cached_gnat

      - name: Check Quizes
        run: python3 contrib/quiz_update.py -v courses/fundamentals_of_ada/quiz/
